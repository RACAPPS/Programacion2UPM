Diseñar e implementar un tipo abstracto de datos (TAD) para manejar fechas como dia/mes/año:

Fecha = (dia, mes, año : int)

TAD Fecha
    INV(f : Fecha) = esFechaCorrecta(f)
    
    esFechaCorrecta (f : Fecha) : boolean
    POST: resultado = f.mes IN [1, 12] and 
                      f.dia IN [1, diasDelMes(f)]

    esIgual (f1, f2 : Fecha) : boolean
    POST: Determina si <f1> es igual que <f2>.

	  esMenor (f1, f2 : Fecha) : boolean
    POST: Determina si <f1> es menor que <f2> en sentido cronológico.
    
    fechaSiguiente (f : Fecha) : Fecha
    POST: Devuelve la Fecha siguiente a <f>, es decir, incrementada en un día.

Fecha
  - dia : int
  - mes : int
  - año : int
  + Fecha (dia, mes, año : int)
  + Fecha (date : String)
  + esFechaCorrecta () : boolean
    POST: resultado = mes in [1, 12] and dia in [1, diasDelMes()]
  + esIgual (f : Fecha) : boolean  //equals!
  + esMenor (f : Fecha) : boolean
  + fechaSiguiente () : Fecha
  + static hoy () : Fecha
  + toString () : String
  + dia () : int
  + mes () : int
  + año () : int
  - esBisiesto (int año) : boolean
    POST: Determina si año es bisiesto
    POST: resultado = << <año> es un multiplo de 4 que no es el año 0
                      de un siglo o es un multiplo de 400 >>
  - diasDeFebrero (int año) : int
    POST: Devuelve el número de días que tiene el mes de
          Febrero para <año>
  - diasDelMes () : int
    POST: Calcula el número de días del mes para esta Fecha.
    POST:
      mes in {4, 6, 9, 11} --> 30
      mes in {1, 3, 5, 7, 8, 10, 12} --> 31
      mes = 2 --> 28
  
Operaciones sobre el TAD Fecha	(FechaOps.java)

FechaOps
	  esMenorOIgual (f1, f2 : Fecha) : boolean
	  POST: Determina si <f1> es menor o igual que <f2>
		      en sentido cronológico.
    esMenorOIgual (f : Fecha, dia, mes : int) : boolean
    POST: Determina si la Fecha <f>, considerando solo su dia y
          su mes, es menor en sentido cronológico que la fecha (dia, mes).
    edad (f, nac : Fecha) : int
    POST: Calcula la edad (en años) que se tiene al día de la 
          fecha <f> conociendo la Fecha de nacimiento <nac>.
    estaEnIntervalo (f, fecha1, fecha2 : Fecha) : boolean
    POST: Determina si la Fecha f está en el intervalo 
          [fecha1, fecha2].       
    minima (f1, f2 : Fecha) : Fecha
    POST: Devuelve la menor fecha entre la fecha f1 y la fecha f2.
    fechaTrasDias (f : Fecha, n : int) : Fecha
    POST: Devuelve la Fecha después de que hayan transcurrido
          <n> dias a partir de la Fecha <f>.
    diasEntreFechas (fecha1, fecha2 : Fecha) : int
    POST: Devuelve el número de días transcurridos
          entre <fecha1> y <fecha2>.
